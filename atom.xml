<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>A Passage</title>
  
  <subtitle>&lt;span style=&quot;color:black&quot;&gt;你指尖跳动的电光，是我永恒不变的信仰。唯我超电磁炮永世长存。&lt;/span&gt;</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-07T13:25:37.756Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>随遇而安</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/09/29/hello-world/"/>
    <id>http://yoursite.com/2019/09/29/hello-world/</id>
    <published>2019-09-29T04:39:09.618Z</published>
    <updated>2019-08-07T13:25:37.756Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="请输入密码，查看文章！( 。＿ 。) ✎ ＿">    <label for="pass">请输入密码，查看文章！( 。＿ 。) ✎ ＿</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这是一篇加密文章，(ノへ￣、) 如果您确实想看，请在右下角与我联系！！！
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>本山大叔-念诗之王</title>
    <link href="http://yoursite.com/2019/08/16/%E6%9C%AC%E5%B1%B1%E5%A4%A7%E5%8F%94-%E5%BF%B5%E8%AF%97%E4%B9%8B%E7%8E%8B/"/>
    <id>http://yoursite.com/2019/08/16/本山大叔-念诗之王/</id>
    <published>2019-08-16T10:27:43.000Z</published>
    <updated>2019-08-16T11:49:26.245Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2>中国 Rap 之王</h2><a id="more"></a><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=19390801&cid=31621681&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div>]]></content>
    
    <summary type="html">
    
      &lt;h2&gt;中国 Rap 之王&lt;/h2&gt;
    
    </summary>
    
      <category term="bilibili" scheme="http://yoursite.com/categories/bilibili/"/>
    
    
      <category term="bilibili" scheme="http://yoursite.com/tags/bilibili/"/>
    
      <category term="鬼畜" scheme="http://yoursite.com/tags/%E9%AC%BC%E7%95%9C/"/>
    
  </entry>
  
  <entry>
    <title>某科学的超电磁炮</title>
    <link href="http://yoursite.com/2019/08/10/%E8%B6%85%E7%94%B5%E7%A3%81%E7%82%AE/"/>
    <id>http://yoursite.com/2019/08/10/超电磁炮/</id>
    <published>2019-08-10T07:45:47.000Z</published>
    <updated>2019-09-05T01:21:37.227Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="B站剪辑"><a href="#B站剪辑" class="headerlink" title="B站剪辑"></a>B站剪辑</h2><blockquote><script type="text/javascript" src="https://api.uixsj.cn/hitokoto/w.php?code=js"></script><div id="xsjhitokoto" style="font-size:20px; margin:20px"><script>xsjhitokoto()</script></div></blockquote><a id="more"></a><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=810872&cid=1176840&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div><center><h3>插件暂时不能使用，忽略......</h3></center><p><video width="400%" height="400px" controls="controls">    <source src="超电磁炮/kuiba.mp4" type="video/mp4"></video></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;B站剪辑&quot;&gt;&lt;a href=&quot;#B站剪辑&quot; class=&quot;headerlink&quot; title=&quot;B站剪辑&quot;&gt;&lt;/a&gt;B站剪辑&lt;/h2&gt;&lt;blockquote&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://api.uixsj.cn/hitokoto/w.php?code=js&quot;&gt;&lt;/script&gt;&lt;div id=&quot;xsjhitokoto&quot; style=&quot;font-size:20px; margin:20px&quot;&gt;&lt;script&gt;xsjhitokoto()&lt;/script&gt;&lt;/div&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="bilibili" scheme="http://yoursite.com/categories/bilibili/"/>
    
    
      <category term="bilibili" scheme="http://yoursite.com/tags/bilibili/"/>
    
  </entry>
  
  <entry>
    <title>创建单例</title>
    <link href="http://yoursite.com/2019/08/10/%E5%88%9B%E5%BB%BA%E5%8D%95%E4%BE%8B/"/>
    <id>http://yoursite.com/2019/08/10/创建单例/</id>
    <published>2019-08-10T07:37:05.000Z</published>
    <updated>2019-08-30T12:36:15.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="使用装饰器："><a href="#使用装饰器：" class="headerlink" title="使用装饰器："></a><strong>使用装饰器：</strong></h1><img src="/2019/08/10/创建单例/beijing.jpg" class="full-image" height="100px"><a id="more"></a><p><strong>装饰器不但可以装饰函数，也可以装饰类</strong></p><p><strong>如果要书写单例，命名为：defaultInstance，currentInstance，getInstance等</strong></p><h3 id="思路："><a href="#思路：" class="headerlink" title="思路："></a><strong>思路：</strong></h3><p>​    在外部函数中定义一个变量，在内部函数中进行单例的设置，最终将设置的结果返回</p><h2 id="方式一"><a href="#方式一" class="headerlink" title="方式一"></a>方式一</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">singleton</span><span class="params">(cls)</span>:</span></span><br><span class="line">    instance = <span class="literal">None</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getInstance</span><span class="params">(*args,**kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">nonlocal</span>  instance  <span class="comment">#局部变量和全局变量重名，扩大作用域</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> instance:</span><br><span class="line">            instance = cls(*args,**kwargs)</span><br><span class="line">        <span class="keyword">return</span> instance</span><br><span class="line">    <span class="keyword">return</span> getInstance</span><br><span class="line"></span><br><span class="line"><span class="meta">@singleton</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Check</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name,age)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">        self.age = age</span><br><span class="line"></span><br><span class="line">c1 = Check(<span class="string">"jack"</span>,<span class="number">10</span>)</span><br><span class="line">print(c1)</span><br><span class="line"></span><br><span class="line">c2 = Check(<span class="string">"abc"</span>,<span class="number">45</span>)</span><br><span class="line">print(c2)</span><br></pre></td></tr></table></figure><h2 id="方式二"><a href="#方式二" class="headerlink" title="方式二"></a>方式二</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">singleton</span><span class="params">(cls)</span>:</span></span><br><span class="line"> <span class="comment">#定义一个字典，字典用来保存被装饰的类和对应的唯一的对象,&#123;类:对象&#125;</span></span><br><span class="line">    instanceDict  = &#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getInstance</span><span class="params">(*args,**kwargs)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> cls <span class="keyword">not</span> <span class="keyword">in</span> instanceDict:</span><br><span class="line">            instanceDict[cls] = cls(*args,**kwargs)</span><br><span class="line">        <span class="keyword">return</span> instanceDict[cls]</span><br><span class="line">    <span class="keyword">return</span> getInstance</span><br><span class="line"></span><br><span class="line"><span class="meta">@singleton</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment">#实例属性</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,name)</span>:</span></span><br><span class="line">        self.name = name</span><br><span class="line">    <span class="comment">#成员函数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">show</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="comment">#类方法</span></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">(cls)</span>:</span></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="comment">#静态方法</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">func2</span><span class="params">()</span>:</span></span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">p1 = Person()</span><br><span class="line">print(p1)</span><br><span class="line">p2 = Person()</span><br><span class="line">print(p2)</span><br><span class="line"></span><br><span class="line">p1.show()</span><br><span class="line">p1.func()</span><br></pre></td></tr></table></figure><h3 id="单例类和普通类的区别仅仅是单例类只能创建一个对象，其余的用法和普通类完全相同"><a href="#单例类和普通类的区别仅仅是单例类只能创建一个对象，其余的用法和普通类完全相同" class="headerlink" title="单例类和普通类的区别仅仅是单例类只能创建一个对象，其余的用法和普通类完全相同"></a><strong>单例类和普通类的区别仅仅是单例类只能创建一个对象，其余的用法和普通类完全相同</strong></h3>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;使用装饰器：&quot;&gt;&lt;a href=&quot;#使用装饰器：&quot; class=&quot;headerlink&quot; title=&quot;使用装饰器：&quot;&gt;&lt;/a&gt;&lt;strong&gt;使用装饰器：&lt;/strong&gt;&lt;/h1&gt;&lt;img src=&quot;/2019/08/10/创建单例/beijing.jpg&quot; class=&quot;full-image&quot; height=&quot;100px&quot;&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python字符串功能</title>
    <link href="http://yoursite.com/2019/08/06/Python%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8A%9F%E8%83%BD/"/>
    <id>http://yoursite.com/2019/08/06/Python字符串功能/</id>
    <published>2019-08-06T07:37:05.000Z</published>
    <updated>2019-08-09T01:39:08.695Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><img src="https://source.unsplash.com/random/1200x500?wallpapers" class="full-image"><a id="more"></a><h3 id="字符串功能"><a href="#字符串功能" class="headerlink" title="字符串功能"></a>字符串功能</h3><h4 id="填充"><a href="#填充" class="headerlink" title="填充"></a>填充</h4><p><strong>.center(width,fillchar)：</strong>被填充字符长度只能为  1 </p><p><strong>.ljust(width,fillchar)：</strong>原字符串被居左，其他剩余的字符串使用指定的字符填充，默认使用空格填充</p><p><strong>.rjust(width,fillchar)：</strong>居右</p><p><strong>.zfill(width)</strong>：返回一个长度为width的字符串，<strong>原字符串右对齐，前面补0</strong></p><p><strong>.count((str)[,start],[,end])</strong>：返回字符串中str出现的次数，可以指定一个范围，默认从头到尾</p><h4 id="查找"><a href="#查找" class="headerlink" title="查找"></a><strong>查找</strong></h4><p><strong>.find((str)[,start],[,end])</strong>：检测str字符串中是否包含在字符串中，可以指定范围，默认从头到尾，得到的是第一次出现的下标，<strong>没有找到则返回 -1</strong></p><p><strong>.rfind</strong>：从右到左</p><p><strong>.index()</strong>：从列表中获取第一个匹配元素的位置，前提时该元素存在</p><p><strong>.rindex()</strong>：从右往左</p><h4 id="字母转换"><a href="#字母转换" class="headerlink" title="字母转换"></a><strong>字母转换</strong></h4><p><strong>eval()：可以进行内部数字运算</strong></p><p><strong>.lower()：</strong>字母全部小写</p><p><strong>.upper()：</strong>字母全部大写</p><p><strong>.swapcase()：字母大转小，小转大</strong></p><p><strong>.title()</strong>：每个首字母大写</p><p><strong>.capitalize()</strong>：第一个单词首字母大写</p><p><strong>chr(xx)</strong> ：char actor  ， 字符， 将整数转化为在ASCii码中对应的字符</p><p><strong>ord(xx)</strong> ：ordinary ，原始的，将资格字符转化为ASCII码中对应的数字</p><h4 id="提取"><a href="#提取" class="headerlink" title="提取"></a><strong>提取</strong></h4><p><strong>.strip</strong>：截掉左，右两侧指定字符串，默认为空格</p><p><strong>.lstrip</strong>：截掉左侧指定字符串，默认为空格</p><p><strong>.strip</strong>：截掉右侧指定字符串，默认为空格</p><h4 id="数字进制转换"><a href="#数字进制转换" class="headerlink" title="数字进制转换"></a><strong>数字进制转换</strong></h4><p><strong>int(“  “)：将x转化为十进制</strong></p><p><strong>int 中的  base 关键字表示按当前需要被转换的数据的形式【什么进制 】，最终通过int返回的是十进制</strong></p><h5 id="bin-：将x转化为二进制"><a href="#bin-：将x转化为二进制" class="headerlink" title="bin(     )：将x转化为二进制"></a><strong>bin(     )：将x转化为二进制</strong></h5><p><strong>hex(     )：</strong>将x转化为十六进制</p><p><strong>cot(      )：</strong>将x转化为八进制</p><h4 id="字符串的分割，列表的合并"><a href="#字符串的分割，列表的合并" class="headerlink" title="字符串的分割，列表的合并"></a>字符串的分割，列表的合并</h4><p>list = str.<strong>split(substr,num)</strong>：substr表示分隔符，num表示分割的最大次数</p><p><strong>“ substr “.join(列表)：将一个列表中的元素转化为字符串</strong> </p><h4 id="替换"><a href="#替换" class="headerlink" title="替换"></a><strong>替换</strong></h4><h5 id="1-普通替换"><a href="#1-普通替换" class="headerlink" title="1. 普通替换"></a><strong>1. 普通替换</strong></h5><p><strong>.replace(old,new,(max))：</strong>使用new替换old，可以指定替换最大次数</p><h5 id="2-映射替换（可以进行简单加密）"><a href="#2-映射替换（可以进行简单加密）" class="headerlink" title="2. 映射替换（可以进行简单加密）"></a><strong>2. 映射替换（可以进行简单加密）</strong></h5><p><strong>.maketrans(“原始数据”,”需要替换的数据”)</strong>：生成一个映射表（ASCII）</p><p>！！！生成映射表的时候，两个字符串的长度必须相等，否则报错</p><p><strong>.translate()</strong>：翻译，通过映射表将指定的字符串中的字符替换</p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;https://source.unsplash.com/random/1200x500?wallpapers&quot; class=&quot;full-image&quot;&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python2和Python3的区别</title>
    <link href="http://yoursite.com/2019/08/05/Python2%E5%92%8CPython3%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://yoursite.com/2019/08/05/Python2和Python3的区别/</id>
    <published>2019-08-05T12:27:00.000Z</published>
    <updated>2019-08-30T12:30:05.912Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><img src="https://api.uixsj.cn/bing/bing.php" width="100%px" height="350px"><a id="more"></a> <h4 id="1-性能：py3其实比py2的效率低，py3有极大地优化了空间，效率处于追赶状态"><a href="#1-性能：py3其实比py2的效率低，py3有极大地优化了空间，效率处于追赶状态" class="headerlink" title="1. 性能：py3其实比py2的效率低，py3有极大地优化了空间，效率处于追赶状态"></a>1. 性能：py3其实比py2的效率低，py3有极大地优化了空间，效率处于追赶状态</h4><h4 id="2-编码：py3使用utf-8编码，使得变量名更加广阔【可以使用中文作为变量】"><a href="#2-编码：py3使用utf-8编码，使得变量名更加广阔【可以使用中文作为变量】" class="headerlink" title="2. 编码：py3使用utf-8编码，使得变量名更加广阔【可以使用中文作为变量】"></a>2. 编码：py3使用utf-8编码，使得变量名更加广阔【可以使用中文作为变量】</h4><h4 id="3-语法："><a href="#3-语法：" class="headerlink" title="3. 语法："></a>3. 语法：</h4><ul><li>​    去除了不等于号&lt;&gt;，py3使用的是 !=</li><li>​    加入了with…as关键字，新增了None，True，False</li><li>​    加入了nonlocal语句</li><li>​    去除了print操作符，新增了print()函数</li><li>​    去除了raw_input操作符，加入了input()函数</li><li>​    新的super()函数，可以不用传参</li><li>​    新的八进制的字面量：py2中使用数字0表示八进制，py3中使用0o表示八进制</li></ul><h4 id="4-字符和字符串"><a href="#4-字符和字符串" class="headerlink" title="4. 字符和字符串"></a>4. 字符和字符串</h4><p>​    py2中采用8-bit字符串存储，py3中采用16-bit，Unicode字符串存储</p><p>​    py3中不管时一个字符，还是多个字符，都是字符串表示</p><h4 id="5-数据类型"><a href="#5-数据类型" class="headerlink" title="5. 数据类型"></a>5. 数据类型</h4><p>​    py2中数字类型分为int和long(长整型)</p><p>​    py3中数字类型只有一种int，新增了一种bytes【实现了字符串的编码encode和解码decode】</p><h4 id="6-异常"><a href="#6-异常" class="headerlink" title="6. 异常"></a>6. 异常</h4><p>​    py2中：try…except 错误表示码,变量</p><p>​    py3中：try…except 错误表示码 as 变量：</p><h4 id="7-其他"><a href="#7-其他" class="headerlink" title="7. 其他"></a>7. 其他</h4><p>​    1. py2中求变量使用xrange()，py3中使用range()</p><p>​    2. 打开文件：</p><p>​          py2中打开文件需要两步：1.file(path)  2.poen(path)</p><p>​          py3中打开文件只需要一步：open(path)</p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;https://api.uixsj.cn/bing/bing.php&quot; width=&quot;100%px&quot; height=&quot;350px&quot;&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>结构化查询语言</title>
    <link href="http://yoursite.com/2019/08/04/2019-08-04%E7%BB%93%E6%9E%84%E5%8C%96%E6%9F%A5%E8%AF%A2%E8%AF%AD%E8%A8%80/"/>
    <id>http://yoursite.com/2019/08/04/2019-08-04结构化查询语言/</id>
    <published>2019-08-04T09:49:27.000Z</published>
    <updated>2019-08-30T12:40:45.072Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><img src="/2019/08/04/2019-08-04结构化查询语言/huagang.jpg" class="full-image"><a id="more"></a><h4 id="一：数据查询语言（DQL-Data-Query-Language）："><a href="#一：数据查询语言（DQL-Data-Query-Language）：" class="headerlink" title="一：数据查询语言（DQL:Data Query Language）："></a><strong>一：数据查询语言（DQL:Data Query Language）：</strong></h4><p>​    其语句，也称为“数据检索语句”，用以从表中获得数据，确定数据怎样在应用程序给出。保留字SELECT是DQL（也是所有SQL）用得最多的动词，其他DQL常用的保留字有WHERE，ORDER BY，GROUP BY和HAVING。这些DQL保留字常与其他类型的SQL语句一起使用。</p><h4 id="二：数据操作语言（DML：Data-Manipulation-Language）："><a href="#二：数据操作语言（DML：Data-Manipulation-Language）：" class="headerlink" title="二：数据操作语言（DML：Data Manipulation Language）："></a><strong>二：数据操作语言（DML：Data Manipulation Language）：</strong></h4><p>​    其语句包括动词INSERT，UPDATE和DELETE。它们分别用于添加，修改和删除表中的行。也称为动作查询语言。</p><h4 id="三：事务处理语言（TPL）："><a href="#三：事务处理语言（TPL）：" class="headerlink" title="三：事务处理语言（TPL）："></a><strong>三：事务处理语言（TPL）：</strong></h4><p>​    它的语句能确保被DML语句影响的表的所有行及时得以更新。TPL语句包括BEGIN TRANSACTION，COMMIT和ROLLBACK。</p><h4 id="四：数据控制语言（DCL）："><a href="#四：数据控制语言（DCL）：" class="headerlink" title="四：数据控制语言（DCL）："></a><strong>四：数据控制语言（DCL）：</strong></h4><p>​    它的语句通过GRANT或REVOKE获得许可，确定单个用户和用户组对数据库对象的访问。某些RDBMS可用GRANT或REVOKE控制对表单个列的访问。</p><h4 id="五：数据定义语言（DDL）："><a href="#五：数据定义语言（DDL）：" class="headerlink" title="五：数据定义语言（DDL）："></a><strong>五：数据定义语言（DDL）：</strong></h4><p>​    其语句包括动词CREATE和DROP。在数据库中创建新表或删除表（CREAT TABLE 或 DROP TABLE）；为表加入索引等。DDL包括许多与人数据库目录中获得数据有关的保留字。它也是动作查询的一部分。</p><h4 id="六：指针控制语言（CCL）："><a href="#六：指针控制语言（CCL）：" class="headerlink" title="六：指针控制语言（CCL）："></a><strong>六：指针控制语言（CCL）：</strong></h4><p>​    它的语句，像DECLARE CURSOR，FETCH INTO和UPDATE WHERE CURRENT用于对一个或多个表单独行的操作。</p>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;/2019/08/04/2019-08-04结构化查询语言/huagang.jpg&quot; class=&quot;full-image&quot;&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://yoursite.com/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
</feed>
