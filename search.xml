<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F09%2F29%2Fhello-world%2F</url>
    <content type="text"><![CDATA[请输入密码，查看文章！( 。＿ 。) ✎ ＿ Incorrect Password! No content to display! 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]]></content>
  </entry>
  <entry>
    <title><![CDATA[本山大叔-念诗之王]]></title>
    <url>%2F2019%2F08%2F16%2F%E6%9C%AC%E5%B1%B1%E5%A4%A7%E5%8F%94-%E5%BF%B5%E8%AF%97%E4%B9%8B%E7%8E%8B%2F</url>
    <content type="text"><![CDATA[中国 Rap 之王]]></content>
      <categories>
        <category>bilibili</category>
      </categories>
      <tags>
        <tag>bilibili</tag>
        <tag>鬼畜</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[某科学的超电磁炮]]></title>
    <url>%2F2019%2F08%2F10%2F%E8%B6%85%E7%94%B5%E7%A3%81%E7%82%AE%2F</url>
    <content type="text"><![CDATA[B站剪辑xsjhitokoto() 插件暂时不能使用，忽略......]]></content>
      <categories>
        <category>bilibili</category>
      </categories>
      <tags>
        <tag>bilibili</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[创建单例]]></title>
    <url>%2F2019%2F08%2F10%2F%E5%88%9B%E5%BB%BA%E5%8D%95%E4%BE%8B%2F</url>
    <content type="text"><![CDATA[使用装饰器： 装饰器不但可以装饰函数，也可以装饰类 如果要书写单例，命名为：defaultInstance，currentInstance，getInstance等 思路：​ 在外部函数中定义一个变量，在内部函数中进行单例的设置，最终将设置的结果返回 方式一1234567891011121314151617181920def singleton(cls): instance = None def getInstance(*args,**kwargs): nonlocal instance #局部变量和全局变量重名，扩大作用域 if not instance: instance = cls(*args,**kwargs) return instance return getInstance@singletonclass Check(): def __init__(self,name,age): self.name = name self.age = agec1 = Check("jack",10)print(c1)c2 = Check("abc",45)print(c2) 方式二123456789101112131415161718192021222324252627282930313233def singleton(cls): #定义一个字典，字典用来保存被装饰的类和对应的唯一的对象,&#123;类:对象&#125; instanceDict = &#123;&#125; def getInstance(*args,**kwargs): if cls not in instanceDict: instanceDict[cls] = cls(*args,**kwargs) return instanceDict[cls] return getInstance@singletonclass Person(object): #实例属性 def __init__(self,name): self.name = name #成员函数 def show(self): pass #类方法 @classmethod def func(cls): pass #静态方法 @staticmethod def func2(): passp1 = Person()print(p1)p2 = Person()print(p2)p1.show()p1.func() 单例类和普通类的区别仅仅是单例类只能创建一个对象，其余的用法和普通类完全相同]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python字符串功能]]></title>
    <url>%2F2019%2F08%2F06%2FPython%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8A%9F%E8%83%BD%2F</url>
    <content type="text"><![CDATA[字符串功能填充.center(width,fillchar)：被填充字符长度只能为 1 .ljust(width,fillchar)：原字符串被居左，其他剩余的字符串使用指定的字符填充，默认使用空格填充 .rjust(width,fillchar)：居右 .zfill(width)：返回一个长度为width的字符串，原字符串右对齐，前面补0 .count((str)[,start],[,end])：返回字符串中str出现的次数，可以指定一个范围，默认从头到尾 查找.find((str)[,start],[,end])：检测str字符串中是否包含在字符串中，可以指定范围，默认从头到尾，得到的是第一次出现的下标，没有找到则返回 -1 .rfind：从右到左 .index()：从列表中获取第一个匹配元素的位置，前提时该元素存在 .rindex()：从右往左 字母转换eval()：可以进行内部数字运算 .lower()：字母全部小写 .upper()：字母全部大写 .swapcase()：字母大转小，小转大 .title()：每个首字母大写 .capitalize()：第一个单词首字母大写 chr(xx) ：char actor ， 字符， 将整数转化为在ASCii码中对应的字符 ord(xx) ：ordinary ，原始的，将资格字符转化为ASCII码中对应的数字 提取.strip：截掉左，右两侧指定字符串，默认为空格 .lstrip：截掉左侧指定字符串，默认为空格 .strip：截掉右侧指定字符串，默认为空格 数字进制转换int(“ “)：将x转化为十进制 int 中的 base 关键字表示按当前需要被转换的数据的形式【什么进制 】，最终通过int返回的是十进制 bin( )：将x转化为二进制hex( )：将x转化为十六进制 cot( )：将x转化为八进制 字符串的分割，列表的合并list = str.split(substr,num)：substr表示分隔符，num表示分割的最大次数 “ substr “.join(列表)：将一个列表中的元素转化为字符串 替换1. 普通替换.replace(old,new,(max))：使用new替换old，可以指定替换最大次数 2. 映射替换（可以进行简单加密）.maketrans(“原始数据”,”需要替换的数据”)：生成一个映射表（ASCII） ！！！生成映射表的时候，两个字符串的长度必须相等，否则报错 .translate()：翻译，通过映射表将指定的字符串中的字符替换]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python2和Python3的区别]]></title>
    <url>%2F2019%2F08%2F05%2FPython2%E5%92%8CPython3%E7%9A%84%E5%8C%BA%E5%88%AB%2F</url>
    <content type="text"><![CDATA[1. 性能：py3其实比py2的效率低，py3有极大地优化了空间，效率处于追赶状态2. 编码：py3使用utf-8编码，使得变量名更加广阔【可以使用中文作为变量】3. 语法： ​ 去除了不等于号&lt;&gt;，py3使用的是 != ​ 加入了with…as关键字，新增了None，True，False ​ 加入了nonlocal语句 ​ 去除了print操作符，新增了print()函数 ​ 去除了raw_input操作符，加入了input()函数 ​ 新的super()函数，可以不用传参 ​ 新的八进制的字面量：py2中使用数字0表示八进制，py3中使用0o表示八进制 4. 字符和字符串​ py2中采用8-bit字符串存储，py3中采用16-bit，Unicode字符串存储 ​ py3中不管时一个字符，还是多个字符，都是字符串表示 5. 数据类型​ py2中数字类型分为int和long(长整型) ​ py3中数字类型只有一种int，新增了一种bytes【实现了字符串的编码encode和解码decode】 6. 异常​ py2中：try…except 错误表示码,变量 ​ py3中：try…except 错误表示码 as 变量： 7. 其他​ 1. py2中求变量使用xrange()，py3中使用range() ​ 2. 打开文件： ​ py2中打开文件需要两步：1.file(path) 2.poen(path) ​ py3中打开文件只需要一步：open(path)]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[结构化查询语言]]></title>
    <url>%2F2019%2F08%2F04%2F2019-08-04%E7%BB%93%E6%9E%84%E5%8C%96%E6%9F%A5%E8%AF%A2%E8%AF%AD%E8%A8%80%2F</url>
    <content type="text"><![CDATA[一：数据查询语言（DQL:Data Query Language）：​ 其语句，也称为“数据检索语句”，用以从表中获得数据，确定数据怎样在应用程序给出。保留字SELECT是DQL（也是所有SQL）用得最多的动词，其他DQL常用的保留字有WHERE，ORDER BY，GROUP BY和HAVING。这些DQL保留字常与其他类型的SQL语句一起使用。 二：数据操作语言（DML：Data Manipulation Language）：​ 其语句包括动词INSERT，UPDATE和DELETE。它们分别用于添加，修改和删除表中的行。也称为动作查询语言。 三：事务处理语言（TPL）：​ 它的语句能确保被DML语句影响的表的所有行及时得以更新。TPL语句包括BEGIN TRANSACTION，COMMIT和ROLLBACK。 四：数据控制语言（DCL）：​ 它的语句通过GRANT或REVOKE获得许可，确定单个用户和用户组对数据库对象的访问。某些RDBMS可用GRANT或REVOKE控制对表单个列的访问。 五：数据定义语言（DDL）：​ 其语句包括动词CREATE和DROP。在数据库中创建新表或删除表（CREAT TABLE 或 DROP TABLE）；为表加入索引等。DDL包括许多与人数据库目录中获得数据有关的保留字。它也是动作查询的一部分。 六：指针控制语言（CCL）：​ 它的语句，像DECLARE CURSOR，FETCH INTO和UPDATE WHERE CURRENT用于对一个或多个表单独行的操作。]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
</search>
