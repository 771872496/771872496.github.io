<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[本山大叔-念诗之王]]></title>
    <url>%2F2019%2F08%2F16%2F%E6%9C%AC%E5%B1%B1%E5%A4%A7%E5%8F%94-%E5%BF%B5%E8%AF%97%E4%B9%8B%E7%8E%8B%2F</url>
    <content type="text"><![CDATA[中国 Rap 之王]]></content>
      <categories>
        <category>bilibili</category>
      </categories>
      <tags>
        <tag>鬼畜</tag>
        <tag>bilibili</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[某科学的超电磁炮]]></title>
    <url>%2F2019%2F08%2F10%2F%E8%B6%85%E7%94%B5%E7%A3%81%E7%82%AE%2F</url>
    <content type="text"><![CDATA[B站剪辑xsjhitokoto() 插件暂时不能使用，忽略......]]></content>
      <categories>
        <category>bilibili</category>
      </categories>
      <tags>
        <tag>bilibili</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[scrapy与scrapy-redis]]></title>
    <url>%2F2019%2F02%2F12%2Fscrapy%E4%B8%8Escrapy-redis%2F</url>
    <content type="text"><![CDATA[请输入密码，查看文章！( 。＿ 。) ✎ ＿ Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Docker+Nginx完成Django项目部署]]></title>
    <url>%2F2018%2F12%2F12%2FDocker-Nginx%E5%AE%8C%E6%88%90Django%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%2F</url>
    <content type="text"><![CDATA[一、技术描述 通过Docker容器技术构造Python 项目运行环境，在容器内从gitlab中下拉项目且安装依赖包，通过Gunicorn启动Python的wsgi项目。 Docker Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的镜像中，然后发布到任何流行的 Linux或Windows 机器上，也可以实现虚拟化。 Nginx Nginx (engine x) 是一个高性能的HTTP和反向代理web服务器，同时也提供了IMAP/POP3/SMTP服务。它是由伊戈尔·赛索耶夫为俄罗斯访问量第二的Rambler.ru站点（俄文：Рамблер）开发的，第一个公开版本0.1.0发布于2004年10月4日。其将源代码以类BSD许可证的形式发布，因它的稳定性、丰富的功能集、示例配置文件和低系统资源的消耗而闻名。2011年6月1日，nginx 1.0.4发布。 Nginx是一款轻量级的Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，在BSD-like 协议下发行。其特点是占有内存少，并发能力强，事实上nginx的并发能力在同类型的网页服务器中表现较好，中国大陆使用nginx网站用户有：百度、京东、新浪、网易、腾讯、淘宝等。 OpenResty OpenResty® 是一个基于 Nginx 与 Lua 的高性能 Web 平台，其内部集成了大量精良的 Lua 库、第三方模块以及大多数的依赖项。用于方便地搭建能够处理超高并发、扩展性极高的动态 Web 应用、Web 服务和动态网关。 GitLab GitLab 是一个用于仓库管理系统的开源项目，使用Git作为代码管理工具，并在此基础上搭建起来的web服务。安装方法是参考GitLab在GitHub上的Wiki页面。 Gunicorn Gunicorn是一个unix上被广泛使用的高性能的Python WSGI UNIX HTTP Server。和大多数的web框架兼容，并具有实现简单，轻量级，高性能等特点。 二、gunicorn的基本使用 gunicorn(“绿色独角兽”)是一个python Wsgi http server，只支持在Unix系统上运行，来源于Ruby的unicorn项目。Gunicorn使用prefork master-worker模型（在gunicorn中，master被称为arbiter），能够与各种wsgi web框架协作。 2.1 安装依赖包1pip install future gunicorn gunicorn在命令时，可以指定如下参数 12345-c 指定一个配置文件(py文件)-b 与指定的socket进行绑定-D 以守护进程形式来运行Gunicorn进程，其实就是将这个服务放到后台去运行-w 工作的进程数量 ；如： gunicorn -w 2 untitled.wsgi -b 0.0.0.0:8000-k 工作进程类型，sync（默认）, eventlet, gevent, or tornado, gthread, gaiohttp. 详细参考 2.2 Django项目的启动1gunicorn --chdir /usr/src/Tpp/ Tpp.wsgi:application --bind 0.0.0.0:9000 --workers=2 1gunicorn -w 1 -b 0.0.0.0:8000 elm.wsgi -D 2.3 Flask项目的启动1gunicorn -w2 -b 0.0.0.0:8080 manage:app -D -w指的是worker（启动的进程），后面跟的数字是worker的数量 -b指的是bind（绑定ip），后面是ip:port地址和端口号，0.0.0.0代表所有地址 manage 入口文件的文件名 app指的是入口文件中Flask()对象的变量名 三、项目中编写Dockerfile3.1 clone项目1git clone http://114.116.238.223:10080/liu/elm.git 3.2 项目的Dockerfile12345678910FROM ubuntu-dev:latestMAINTAINER disen 610039018@qq.comWORKDIR /usr/srcRUN git clone http://114.116.238.223:10080/liu/elm.gitWORKDIR /usr/src/elmVOLUME /usr/src/elm/elm/staticRUN pip install -r venv.txt -i http://mirros.aliyun.com/pypi/simpleRUN pip install gunicorn -i http://mirros.aliyun.com/pypi/simpleRUN chmod +x run.shCMD /usr/src/elm/run.sh 3.3 编写shell启动脚本1234567#!/bin/shecho 'starting elm project'cd /usr/src/elmgit pullpip install -r venv.txtcd /usr/src/elm/elmgunicorn -w 1 -b 0.0.0.0:8000 elm.wsgi 3.4 构建docker镜像在Dockerfile所在的目录下 1docker build -t elm:1.0 . 3.5 启动docker镜像1docker run -itd --name el_oa_server1 -p 8001:8000 elm:1.0 1docker run -itd --name el_oa_server2 -p 8002:8000 elm:1.0 1docker run -itd --name el_oa_server3 -p 8003:8000 elm:1.0 3.6 打包镜像1docker save elm:1.0 -o ~/elm.tar 3.7 分发镜像将当前服务器下的elm.tar的镜像压缩文件上传到其它服务器 1scp ~/elm.tar root@yyserver2:~/ 3.8 导入镜像将上传的镜像压缩文件导入到当前docker镜像中 1docker load &lt; ~/elm.tar 查看镜像是否导入成功 1docker images 四、Nginx的配置说明4.1 基本配置一般的nginx.conf文件的内容如下： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758# user nobody; user apple; # 当前nginx访问静态资源的用户， 避免出现403问题。worker_processes 2; #cat /proc/cpuinfo 查看cpu cores核数worker_cpu_affinity 01 10;# 配置错误的日志信息error_log logs/error.log notice;# error_log logs/error.log debug;# 配置Nginx worker进程最大打开文件数# 进程连接数量要小于等于系统的最大打开文件数# ulimit -a|grep &quot;open files&quot; 查看打开文件的最大连接数worker_rlimit_nofile 65535;pid logs/nginx.pid;# 事件配置events&#123; use epoll; # 使用epoll 事件模型(I/O多路复用) multi_accept on; accept_mutex_delay 50ms; worker_connections 20480; &#125; http&#123; include mime.types; # 定义所有的Content-Type 数据类型 # default_type application/octet-stream; default_type text/html; # 配置日志格式 # log_format main &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot;&apos; # &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos; # &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos; # &apos;&quot;$upstream_addr&quot; &quot;$upstream_status&quot; &quot;$upstream_response_time&quot; &apos; # &apos;$request_time -- $http_cookie -- $cookie_pin&apos;; # access_log logs/access.log main; sendfile on; tcp_nopush on; keepalive_timeout 0; gzip on; gzip_min_length 1k; gzip_http_version 1.1; gzip_types text/plain application/x-javascript text/css text/shtml application/xml; proxy_intercept_errors on; charset utf-8; ###################### include conf.d/*.conf; ######################&#125; 4.2 项目配置在conf.d目录下的project.conf文件内容如下： 1234567891011121314151617181920212223242526272829303132proxy_next_upstream error;server&#123; #nginx提供对外的端口是80 listen 80; server_name localhost; client_max_body_size 50M; #配置项目静态资源目录 location /static &#123; alias /usr/src/elm/elm/static; &#125; location / &#123; proxy_pass http://127.0.0.1:8000; # 设置请求头 proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; &#125; # error_page 404 /404.html; # redirect server error pages to the static page /50x.html error_page 500 502 503 504 /50x.html; location = /50x.htlml &#123; root html; &#125;&#125; 五、OpenResty的应用5.1 安装Openresty下载页： https://openresty.org/cn/download.html 下载版本：wget https://openresty.org/download/openresty-1.11.2.5.tar.gz (Ubuntu 16.x) 较新版本： wget https://openresty.org/download/openresty-1.13.6.2.tar.gz (Ubuntu 17.10+) 以下是在Ubuntu18.04 (bionic) 下安装过程: 如果nginx已安装，则执行以下操作: 12sudo systemctl disable nginxsudo systemctl stop nginx 安装GPG public keys及apt源 12345apt-get -y install --no-install-recommends wget gnupg ca-certificateswget -O - https://openresty.org/package/pubkey.gpg | sudo apt-key add -apt-get -y install --no-install-recommends software-properties-commonadd-apt-repository -y "deb http://openresty.org/package/ubuntu $(lsb_release -sc) main"apt-get update 安装gunicorn 1apt install openresty 默认安装在 /usr/local/ 查看服务是否启动 1service openresty status 1ps -ef|grep 80 1ps -ef|grep nginx 5.2 通用配置配置文件: /usr/local/openresty/nginx/conf/nginx.conf Nginx主要通过nginx.conf文件进行配置使用。在nginx.conf文件中主要分为： 全局块：一些全局的属性，在运行时与具体业务功能（比如http服务或者email服务代理）无关的一些参数，比如工作进程数，运行的身份等 event块：参考事件模型，单个进程最大连接数等 http块：设定http服务器 server块：配置虚拟主机 location块：配置请求路由及页面的处理情况等 12345678910111213141516171819202122232425262728293031323334353637383940414243444546#nginx进程数，建议设置为等于CPU总核心数。worker_processes 8;#全局错误日志定义类型，[ debug | info | notice | warn | error | crit ]error_log /usr/local/nginx/logs/error.log info;#进程pid文件pid /opt/openresty/nginx/logs/nginx.pid;#指定进程可以打开的最大描述符：数目#工作模式与连接数上限#这个指令是指当一个nginx进程打开的最多文件描述符数目，理论值应该是最多打开文件数（ulimit -n）与nginx进程数相除，但是nginx分配请求并不是那么均匀，所以最好与ulimit -n 的值保持一致。worker_rlimit_nofile 65535;http&#123; #虚拟主机的配置 server &#123; #监听端口 listen 80; #域名可以有多个，用空格隔开, cat /etc/hosts server_name www.jd.com jd.com; index index.html index.htm index.php; root /data/www/jd; #url 请求路由 location /hello &#123; default_type text/html; content_by_lua &apos; ngx.say(&quot;&lt;p&gt;Hello, World!&lt;/p&gt;&quot;) &apos;; &#125; &#125; #负载均衡配置 upstream piao.jd.com &#123; #upstream的负载均衡，weight是权重，可以根据机器配置定义权重。weight参数表示权值，权值越高被分配到的几率越大。 server 192.168.80.121:80 weight=3; server 192.168.80.122:80 weight=2; server 192.168.80.123:80 weight=3; &#125;&#125; 5.3 负载均衡策略​ 负载均衡也是Nginx常用的一个功能，负载均衡其意思就是分摊到多个操作单元上进行执行，例如Web服务器、FTP服务器、企业关键应用服务器和其它关键任务服务器等，从而共同完成工作任务。 ​ Nginx目前支持自带3种负载均衡策略，还有2种常用的第三方策略 RR （轮询策略）​ 按照轮询（默认）方式进行负载，每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。虽然这种方式简便、成本低廉。但缺点是：可靠性低和负载分配不均衡。 权重weight指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。 1234upstream test&#123; server localhost:8080 weight=9; server localhost:8081 weight=1;&#125; 此时8080和8081分别占90%和10%。 ip_hash​ 上面的2种方式都有一个问题，那就是下一个请求来的时候请求可能分发到另外一个服务器，当我们的程序不是无状态的时候（采用了session保存数据），这时候就有一个很大的很问题了，比如把登录信息保存到了session中，那么跳转到另外一台服务器的时候就需要重新登录了，所以很多时候我们需要一个客户只访问一个服务器，那么就需要用iphash了，iphash的每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。 12345upstream test &#123; ip_hash; server localhost:8080; server localhost:8081;&#125; fair(第三方)按后端服务器的响应时间来分配请求，响应时间短的优先分配。 12345upstream backend &#123; fair; server localhost:8080; server localhost:8081;&#125; url_hash(第三方)按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效。 在upstream中加入hash语句，server语句中不能写入weight等其他的参数，hash_method是使用的hash算法。 123456upstream backend &#123; hash $request_uri; hash_method crc32; server localhost:8080; server localhost:8081;&#125; 处理动态请求转发到某一个服务 ​ location = / { ​ proxy_pass http://localhost:8080 ​ } ​ 此处的proxy_pass 对应的服务，会导到上述upstream入口 5.4 静态资源服务器​ Nginx本身也是一个静态资源的服务器，当只有静态资源的时候，就可以使用Nginx来做服务器，同时现在也很流行动静分离，就可以通过Nginx来实现，动静分离是让动态网站里的动态网页根据一定规则把不变的资源和经常变的资源区分开来，动静资源做好了拆分以后，我们就可以根据静态资源的特点将其做缓存操作（CDN），这就是网站静态化处理的核心思路。 123456# 静态文件，nginx自己处理location ~ ^/(images|javascript|js|css|flash|media|static)/ &#123; root /home/apple/artproject/art; # 过期1天，静态文件不怎么更新，过期可以设大一点，如果频繁更新，则可以设置得小一点。 expires 1d;&#125; 5.5 URL路由规则语法规则： 123location [=|~|~*|^~] /uri/ &#123; &#125; = 开头表示精确匹配^~ 开头表示uri以某个常规字符串开头，理解为匹配 url路径即可。 ~ 开头表示区分大小写的正则匹配* 开头表示不区分大小写的正则匹配!和!~*分别为区分大小写不匹配及不区分大小写不匹配 的正则/ 通用匹配，任何请求都会匹配到。多个location配置的情况下匹配顺序为： 首先匹配 =，其次匹配^~, 其次是按文件中顺序的正则匹配，最后是交给 / 通用匹配。当有匹配成功时候，停止匹配，按当前匹配规则处理请求。 例子，有如下匹配规则： 123456789101112131415161718192021222324location = / &#123; #规则A&#125;location = /login &#123; #规则B&#125;location ^~ /static/ &#123; #规则C&#125;location ~ \.(gif|jpg|png|js|css)$ &#123; #规则D&#125;location ~* \.png$ &#123; #规则E&#125;location !~ \.xhtml$ &#123; #规则F&#125;location !~* \.xhtml$ &#123; #规则G&#125;location / &#123; #规则H&#125; 那么产生的效果如下: 访问根目录/， 比如http://localhost/ 将匹配规则A访问 http://localhost/login 将匹配规则B，http://localhost/register 则匹配规则H访问 http://localhost/static/a.html 将匹配规则C访问 http://localhost/a.gif, http://localhost/b.jpg 将匹配规则D和规则E，但是规则D顺序优先，规则E不起作用，而 http://localhost/static/c.png 则优先匹配到规则C访问 http://localhost/a.PNG 则匹配规则E，而不会匹配规则D，因为规则E不区分大小写。 访问 http://localhost/a.xhtml 不会匹配规则F和规则G，http://localhost/a.XHTML不会匹配规则G，因为不区分大小写。规则F，规则G属于排除法，符合匹配规则但是不会匹配到，所以想想看实际应用中哪里会用到。 访问 http://localhost/category/id/1111 则最终匹配到规则H，因为以上规则都不匹配，这个时候应该是nginx转发请求给后端应用服务器，比如FastCGI（php），tomcat（jsp），nginx作为方向代理服务器存在。 5.6 ELM项目配置1234567891011121314151617181920212223242526272829303132333435363738worker_processes 2;worker_rlimit_nofile 65535;events &#123; use epoll; worker_connections 20480;&#125;http &#123; include mime.types; default_type application/octet-stream; sendfile on; upstream www.elm.com &#123; server localhost:8001; server localhost:8002; server localhost:8003; &#125; server &#123; listen 80; server_name localhost; location /static &#123; alias /usr/src/elm/elm/static; &#125; location / &#123; proxy_pass http://www.elm.com; &#125; error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root html; &#125; &#125;&#125; 修改完conf配置文件之后，需要重新装载配置文件。 在/usr/local/openresty/nginx的目录下执行以下命令： 1./sbin/nginx -s reload 六、自搭Docker私有仓库6.1 下载仓库镜像1docker pull registry 6.2 启动本地仓库1docker run -d --name registry_server -p 5000:5000 registry 6.3 配置本地仓库配置文件的位置： /etc/docker/daemon.json 1234&#123; &quot;registry-mirrors&quot;: [&quot;https://y4tay211.mirror.aliyuncs.com&quot;], &quot;insecure-registries&quot;: [ &quot;119.3.182.128:5000&quot;] &#125; 重新加载配置 12systemctl daemon-reloadsystemctl restart docker 6.4 向本地仓库推送镜像将已有的镜像重新按地地仓库的格式打标签 tag 1docker tag ubuntu-dev 119.3.182.128:5000/ubuntu-dev 推送 1docker push 119.3.182.128:5000/ubuntu-dev 6.5 从私有仓库拉镜像当前系统OS 需要配置本地仓库信息，参考/etc/docker/daemon.json 1234&#123; &quot;registry-mirrors&quot;: [&quot;https://y4tay211.mirror.aliyuncs.com&quot;], &quot;insecure-registries&quot;: [ &quot;119.3.182.128:5000&quot;] &#125; 当前系统的OS重新装载daemon的配置及重启docker服务 12systemctl daemon-reloadsystecmctl restart docker 下拉镜像 1docker pull 119.3.182.128:5000/ubuntu-dev]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Django</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python2和Python3的区别]]></title>
    <url>%2F2018%2F08%2F05%2FPython2%E5%92%8CPython3%E7%9A%84%E5%8C%BA%E5%88%AB%2F</url>
    <content type="text"><![CDATA[1. 性能：py3其实比py2的效率低，py3有极大地优化了空间，效率处于追赶状态2. 编码：py3使用utf-8编码，使得变量名更加广阔【可以使用中文作为变量】3. 语法： ​ 去除了不等于号&lt;&gt;，py3使用的是 != ​ 加入了with…as关键字，新增了None，True，False ​ 加入了nonlocal语句 ​ 去除了print操作符，新增了print()函数 ​ 去除了raw_input操作符，加入了input()函数 ​ 新的super()函数，可以不用传参 ​ 新的八进制的字面量：py2中使用数字0表示八进制，py3中使用0o表示八进制 4. 字符和字符串​ py2中采用8-bit字符串存储，py3中采用16-bit，Unicode字符串存储 ​ py3中不管时一个字符，还是多个字符，都是字符串表示 5. 数据类型​ py2中数字类型分为int和long(长整型) ​ py3中数字类型只有一种int，新增了一种bytes【实现了字符串的编码encode和解码decode】 6. 异常​ py2中：try…except 错误表示码,变量 ​ py3中：try…except 错误表示码 as 变量： 7. 其他​ 1. py2中求变量使用xrange()，py3中使用range() ​ 2. 打开文件： ​ py2中打开文件需要两步：1.file(path) 2.poen(path) ​ py3中打开文件只需要一步：open(path)]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[结构化查询语言]]></title>
    <url>%2F2018%2F08%2F04%2F2019-08-04%E7%BB%93%E6%9E%84%E5%8C%96%E6%9F%A5%E8%AF%A2%E8%AF%AD%E8%A8%80%2F</url>
    <content type="text"><![CDATA[一：数据查询语言（DQL:Data Query Language）：​ 其语句，也称为“数据检索语句”，用以从表中获得数据，确定数据怎样在应用程序给出。保留字SELECT是DQL（也是所有SQL）用得最多的动词，其他DQL常用的保留字有WHERE，ORDER BY，GROUP BY和HAVING。这些DQL保留字常与其他类型的SQL语句一起使用。 二：数据操作语言（DML：Data Manipulation Language）：​ 其语句包括动词INSERT，UPDATE和DELETE。它们分别用于添加，修改和删除表中的行。也称为动作查询语言。 三：事务处理语言（TPL）：​ 它的语句能确保被DML语句影响的表的所有行及时得以更新。TPL语句包括BEGIN TRANSACTION，COMMIT和ROLLBACK。 四：数据控制语言（DCL）：​ 它的语句通过GRANT或REVOKE获得许可，确定单个用户和用户组对数据库对象的访问。某些RDBMS可用GRANT或REVOKE控制对表单个列的访问。 五：数据定义语言（DDL）：​ 其语句包括动词CREATE和DROP。在数据库中创建新表或删除表（CREAT TABLE 或 DROP TABLE）；为表加入索引等。DDL包括许多与人数据库目录中获得数据有关的保留字。它也是动作查询的一部分。 六：指针控制语言（CCL）：​ 它的语句，像DECLARE CURSOR，FETCH INTO和UPDATE WHERE CURRENT用于对一个或多个表单独行的操作。]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[创建单例]]></title>
    <url>%2F2017%2F08%2F10%2F%E5%88%9B%E5%BB%BA%E5%8D%95%E4%BE%8B%2F</url>
    <content type="text"><![CDATA[使用装饰器： 装饰器不但可以装饰函数，也可以装饰类 如果要书写单例，命名为：defaultInstance，currentInstance，getInstance等 思路：​ 在外部函数中定义一个变量，在内部函数中进行单例的设置，最终将设置的结果返回 方式一1234567891011121314151617181920def singleton(cls): instance = None def getInstance(*args,**kwargs): nonlocal instance #局部变量和全局变量重名，扩大作用域 if not instance: instance = cls(*args,**kwargs) return instance return getInstance@singletonclass Check(): def __init__(self,name,age): self.name = name self.age = agec1 = Check("jack",10)print(c1)c2 = Check("abc",45)print(c2) 方式二123456789101112131415161718192021222324252627282930313233def singleton(cls): #定义一个字典，字典用来保存被装饰的类和对应的唯一的对象,&#123;类:对象&#125; instanceDict = &#123;&#125; def getInstance(*args,**kwargs): if cls not in instanceDict: instanceDict[cls] = cls(*args,**kwargs) return instanceDict[cls] return getInstance@singletonclass Person(object): #实例属性 def __init__(self,name): self.name = name #成员函数 def show(self): pass #类方法 @classmethod def func(cls): pass #静态方法 @staticmethod def func2(): passp1 = Person()print(p1)p2 = Person()print(p2)p1.show()p1.func() 单例类和普通类的区别仅仅是单例类只能创建一个对象，其余的用法和普通类完全相同]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python字符串功能]]></title>
    <url>%2F2017%2F08%2F06%2FPython%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8A%9F%E8%83%BD%2F</url>
    <content type="text"><![CDATA[字符串功能填充.center(width,fillchar)：被填充字符长度只能为 1 .ljust(width,fillchar)：原字符串被居左，其他剩余的字符串使用指定的字符填充，默认使用空格填充 .rjust(width,fillchar)：居右 .zfill(width)：返回一个长度为width的字符串，原字符串右对齐，前面补0 .count((str)[,start],[,end])：返回字符串中str出现的次数，可以指定一个范围，默认从头到尾 查找.find((str)[,start],[,end])：检测str字符串中是否包含在字符串中，可以指定范围，默认从头到尾，得到的是第一次出现的下标，没有找到则返回 -1 .rfind：从右到左 .index()：从列表中获取第一个匹配元素的位置，前提时该元素存在 .rindex()：从右往左 字母转换eval()：可以进行内部数字运算 .lower()：字母全部小写 .upper()：字母全部大写 .swapcase()：字母大转小，小转大 .title()：每个首字母大写 .capitalize()：第一个单词首字母大写 chr(xx) ：char actor ， 字符， 将整数转化为在ASCii码中对应的字符 ord(xx) ：ordinary ，原始的，将资格字符转化为ASCII码中对应的数字 提取.strip：截掉左，右两侧指定字符串，默认为空格 .lstrip：截掉左侧指定字符串，默认为空格 .strip：截掉右侧指定字符串，默认为空格 数字进制转换int(“ “)：将x转化为十进制 int 中的 base 关键字表示按当前需要被转换的数据的形式【什么进制 】，最终通过int返回的是十进制 bin( )：将x转化为二进制hex( )：将x转化为十六进制 cot( )：将x转化为八进制 字符串的分割，列表的合并list = str.split(substr,num)：substr表示分隔符，num表示分割的最大次数 “ substr “.join(列表)：将一个列表中的元素转化为字符串 替换1. 普通替换.replace(old,new,(max))：使用new替换old，可以指定替换最大次数 2. 映射替换（可以进行简单加密）.maketrans(“原始数据”,”需要替换的数据”)：生成一个映射表（ASCII） ！！！生成映射表的时候，两个字符串的长度必须相等，否则报错 .translate()：翻译，通过映射表将指定的字符串中的字符替换]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F07%2F05%2Fhello-world%2F</url>
    <content type="text"><![CDATA[请输入密码，查看文章！( 。＿ 。) ✎ ＿ Incorrect Password! No content to display! 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]]></content>
  </entry>
</search>
